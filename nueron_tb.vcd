$date
	Tue Apr 15 15:50:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module nueron_tb $end
$var wire 23 ! out_data [22:0] $end
$var reg 1 " clk $end
$var reg 12 # in_data [11:0] $end
$var reg 1 $ rst $end
$scope module uut $end
$var wire 23 % add_result [22:0] $end
$var wire 1 & clk $end
$var wire 12 ' in_data [11:0] $end
$var wire 23 ( out [22:0] $end
$var wire 23 ) result [22:0] $end
$var wire 1 * rst $end
$var reg 4 + counter [3:0] $end
$var reg 23 , mult [22:0] $end
$var reg 23 - num1 [22:0] $end
$var reg 23 . num2 [22:0] $end
$var reg 23 / out_data [22:0] $end
$scope module mut $end
$var wire 9 0 frac1 [8:0] $end
$var wire 2 1 frac2 [1:0] $end
$var wire 2 2 int1 [1:0] $end
$var wire 9 3 int2 [8:0] $end
$var wire 12 4 num1 [11:0] $end
$var wire 12 5 num2 [11:0] $end
$var wire 22 6 product [21:0] $end
$var wire 23 7 result [22:0] $end
$var wire 1 8 result_sign $end
$var wire 1 9 sign1 $end
$var wire 1 : sign2 $end
$var wire 11 ; unsigned_val1 [10:0] $end
$var wire 11 < unsigned_val2 [10:0] $end
$upscope $end
$scope module sut $end
$var wire 4 = counter [3:0] $end
$var wire 23 > num1 [22:0] $end
$var wire 23 ? num2 [22:0] $end
$var wire 23 @ result [22:0] $end
$var reg 1 A sign $end
$var reg 22 B signed_result [21:0] $end
$upscope $end
$scope module rut $end
$var wire 23 C data_in [22:0] $end
$var wire 23 D data_out [22:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 D
b0 C
b0 B
0A
b0 @
b0 ?
b0 >
bx =
bx <
b0 ;
x:
09
x8
bx 7
bx 6
bx 5
b0 4
bx 3
b0 2
bx 1
b0 0
bx /
b0 .
b0 -
bx ,
bx +
1*
bx )
b0 (
b0 '
0&
b0 %
1$
b0 #
0"
bx !
$end
#5000
18
1:
b10000000000000000000000 )
b10000000000000000000000 7
b0 6
b101000 3
b10100000 <
b0 1
b0 /
b0 !
b10000000000000100101010 ,
b0 +
b100010100000 5
b0 =
1"
1&
#10000
0"
0&
#15000
1"
1&
#20000
b0 (
b0 D
1A
b100101010 B
b10000000000000100101010 %
b10000000000000100101010 @
b10000000000000100101010 C
b10000000000000100101010 -
b10000000000000100101010 >
b10000000011100110000000 )
b10000000011100110000000 7
b11100110000000 6
b1011100 ;
b1011100 0
0"
0&
b1011100 #
b1011100 '
b1011100 4
0$
0*
#25000
08
b11100110000000 )
b11100110000000 7
0:
b1 +
b10100000 5
b1 =
b10000000011100110000000 ,
1"
1&
#30000
b11101010101010 B
b10000000011101010101010 %
b10000000011101010101010 @
b10000000011101010101010 C
b10000000000000100101010 .
b10000000000000100101010 ?
b10000000011100110000000 -
b10000000011100110000000 >
b1000111010000000 )
b1000111010000000 7
b1000111010000000 6
b11100100 ;
b11100100 0
0"
0&
b11100100 #
b11100100 '
b11100100 4
#35000
b11001110101000000 )
b11001110101000000 7
b11001110101000000 6
b111010000 <
b1110100 3
b10 +
b111010000 5
b10 =
b1000111010000000 ,
1"
1&
#40000
b101001111010110 (
b101001111010110 D
0A
b101001111010110 B
b101001111010110 %
b101001111010110 @
b101001111010110 C
b10000000011101010101010 .
b10000000011101010101010 ?
b1000111010000000 -
b1000111010000000 >
b110010110000000000 )
b110010110000000000 7
b110010110000000000 6
b111000000 ;
b111000000 0
0"
0&
b111000000 #
b111000000 '
b111000000 4
#45000
x8
x:
bx 3
bx )
bx 7
bx 6
bx <
bx 1
b11 +
bx 5
b11 =
b110010110000000000 ,
1"
1&
#50000
b110111111111010110 (
b110111111111010110 D
b110111111111010110 B
b110111111111010110 %
b110111111111010110 @
b110111111111010110 C
b101001111010110 .
b101001111010110 ?
b110010110000000000 -
b110010110000000000 >
b1011100 ;
b1011100 0
0"
0&
b1011100 #
b1011100 '
b1011100 4
#55000
b100 +
b100 =
bx ,
1"
1&
#60000
bx (
bx D
xA
bx B
bx %
bx @
bx C
b110111111111010110 .
b110111111111010110 ?
bx -
bx >
b110111111111010110 /
b110111111111010110 !
0"
0&
#65000
18
1:
b10000000011100110000000 )
b10000000011100110000000 7
b11100110000000 6
b101000 3
b10100000 <
b0 1
b0 /
b0 !
b10000000000000100101010 ,
b0 +
b100010100000 5
b0 =
1"
1&
#70000
b0 (
b0 D
1A
b1xxxxxxxxxxxxxxxxxxxxxx %
b1xxxxxxxxxxxxxxxxxxxxxx @
b1xxxxxxxxxxxxxxxxxxxxxx C
bx .
bx ?
b10000000000000100101010 -
b10000000000000100101010 >
0"
0&
#75000
08
b11100110000000 )
b11100110000000 7
0:
b1 +
b10100000 5
b1 =
b10000000011100110000000 ,
1"
1&
#80000
b1xxxxxxxxxxxxxxxxxxxxxx .
b1xxxxxxxxxxxxxxxxxxxxxx ?
b10000000011100110000000 -
b10000000011100110000000 >
0"
0&
#85000
b1010011011000000 )
b1010011011000000 7
b1010011011000000 6
b111010000 <
b1110100 3
b10 +
b111010000 5
b10 =
b11100110000000 ,
1"
1&
#90000
b0xxxxxxxxxxxxxxxxxxxxxx (
b0xxxxxxxxxxxxxxxxxxxxxx D
0A
b0xxxxxxxxxxxxxxxxxxxxxx %
b0xxxxxxxxxxxxxxxxxxxxxx @
b0xxxxxxxxxxxxxxxxxxxxxx C
b11100110000000 -
b11100110000000 >
0"
0&
#95000
x8
x:
bx 3
bx )
bx 7
bx 6
bx <
bx 1
b11 +
bx 5
b11 =
b1010011011000000 ,
1"
1&
#100000
b0xxxxxxxxxxxxxxxxxxxxxx .
b0xxxxxxxxxxxxxxxxxxxxxx ?
b1010011011000000 -
b1010011011000000 >
0"
0&
#105000
b100 +
b100 =
bx ,
1"
1&
#110000
bx (
bx D
xA
bx %
bx @
bx C
bx -
bx >
b0xxxxxxxxxxxxxxxxxxxxxx /
b0xxxxxxxxxxxxxxxxxxxxxx !
0"
0&
#115000
18
1:
b10000000011100110000000 )
b10000000011100110000000 7
b11100110000000 6
b101000 3
b10100000 <
b0 1
b0 /
b0 !
b10000000000000100101010 ,
b0 +
b100010100000 5
b0 =
1"
1&
#120000
b0 (
b0 D
1A
b1xxxxxxxxxxxxxxxxxxxxxx %
b1xxxxxxxxxxxxxxxxxxxxxx @
b1xxxxxxxxxxxxxxxxxxxxxx C
bx .
bx ?
b10000000000000100101010 -
b10000000000000100101010 >
0"
0&
#125000
08
b11100110000000 )
b11100110000000 7
0:
b1 +
b10100000 5
b1 =
b10000000011100110000000 ,
1"
1&
#130000
b1xxxxxxxxxxxxxxxxxxxxxx .
b1xxxxxxxxxxxxxxxxxxxxxx ?
b10000000011100110000000 -
b10000000011100110000000 >
0"
0&
#135000
b1010011011000000 )
b1010011011000000 7
b1010011011000000 6
b111010000 <
b1110100 3
b10 +
b111010000 5
b10 =
b11100110000000 ,
1"
1&
#140000
b0xxxxxxxxxxxxxxxxxxxxxx (
b0xxxxxxxxxxxxxxxxxxxxxx D
0A
b0xxxxxxxxxxxxxxxxxxxxxx %
b0xxxxxxxxxxxxxxxxxxxxxx @
b0xxxxxxxxxxxxxxxxxxxxxx C
b11100110000000 -
b11100110000000 >
0"
0&
#145000
x8
x:
bx 3
bx )
bx 7
bx 6
bx <
bx 1
b11 +
bx 5
b11 =
b1010011011000000 ,
1"
1&
#150000
b0xxxxxxxxxxxxxxxxxxxxxx .
b0xxxxxxxxxxxxxxxxxxxxxx ?
b1010011011000000 -
b1010011011000000 >
0"
0&
